#include<stdio.h>
#include<math.h>
#include<iostream.h>

void 
calculo_campo( double x0, double y_0, double* X, double* Y, double* Q, const int N);
{
	int i;
	double r3, xi, yi;
	Ex = 0.0 ;
	Ey = 0.0;
	for(i=0; i<N ; i++)
	
	{
	xi = x0 - X[i]; // Es la distancia entre el punto inicial y la carga en x
	yi = y0 -Y[i];  // Es la distancia entre el punto unicial y la carga en y
	r3 = pow(xi*xi + yi*yi, -1.5); /* Es la parte del denominador de la formula del campo*/ 
	Ex = Ex + Q[i]*xi*r3;
	Ey = Ey + Q[i]*yi*r3;		
	}
}


//FUNCIONES DISTANCIA// 

double distanciaMaxima (double x0, double y0, double X, double Y, int N) {
    int i;
	double distancia;
	disMax = 0.0;
	
	for (i=0; i<N; i++){
		
		distancia=sqrt(pow((x0-X[i]),2) + pow((y0-Y[i]),2));
		
		//Medimos la distancia del punto inicial a cada carga y determinamos
		//la distancia máxima.
		
		if (distancia>disMax){
			 distancia=disMax;
		}     
	}
	
	return disMax;
}


double distanciaMinima (double x0, double y0, double X, double Y, int N) {
    int i;
	double distancia;
	disMin = 1000;
	
	for (i=0; i<N; i++){
		
		distancia=sqrt(pow((x0-X[i]),2) + pow((y0-Y[i]),2));
		
		//Medimos la distancia del punto inicial a cada carga y determinamos
		//la distancia mínima.
		
		if (distancia<disMax){
			 distancia=disMin;
		}     
	}
	
	return disMin;
}







void
lineas_campo(double x , double y, double* X, double* Y, double* Q, const int N);

{
	const double  paso = 0.01;
	const double  max_dist = 20.0;
	int            i, direccion ;
	double         x0, y0;
	double         rmin, rmax, r, dx, dy,dl;
	double          Ex, Ey, E;	
	
	for(direccion = -1; direccion<= 1; direccion +=2)
	{
		dl = direction * step;
		x0 = xin;
		y0 = yin;
		dx = 0.0;
		dy = 0.0;
		mdist(x0, y0, X, Y, N, rmin, rmax);
		while (rmin> (2.0*step) && rmax < max_dist)
		{
			printf("%d, %d \n", x0, y0);
			E = sqrt(Ex*Ex +Ey*Ey);
			if(E<= 1.0 e-10)
			{
				 break;
			}
			
			dx = dl*Ex/E;
			dy = dl*Ey/E;
			x0 = x0 + dx;
			y0 = y0 + dy;
			mdist(x0, y0, X, Y, N, rmin, rmax);
		}
	}	
}


int main (){
	int numCargas,numLineas; i;
	float Q[100], X[100], Y[100];
	
	printf("Ingrese el numero de cargas (menor o igual a 100):\n");
	scanf("%i",&numCargas);
	
	printf("Ingrese el valor de cada carga (en Coulombs).\n");	
	for (i=0;i<numCargas;i++){
		printf("Carga %i = ",i+1);
		scanf("%f",&Q[i]);
		printf("\n");
	}
	
	printf("Ingrese la coordenada en x para:\n");
	for (i=0;i<numCargas;i++){
		printf("Carga %i: ",i+1);
		scanf("%f",&X[i]);
		printf("\n");
	}
	
	printf("Ingrese la coordenada en y para:\n");
	for (i=0;i<numCargas;i++){
		printf("Carga %i: ",i+1);
		scanf("%f",&Y[i]);
		printf("\n");
	}

	printf("Cuantas lineas desea dibujar?\n");
	scanf("%i",&numLineas);
	
	
	//DIBUJAR LINEAS.
	n=6; L=1;
	for(i=-n;i<n;i++){
		for(j=-n;j<=n;j++){
			x0=i*(L/n);
			y0=j*(L/n);
			
			disMin=distanciaMinima(x0, y0, X, Y, N);
			
			if(disMin>L/(n*10)){
				epotline(x0,y0,X,Y,Q,N);
			}
		}
	}
	return 0;
}
