#include<stdio.h>
#include<math.h>
#include<iostream>


 double calculo_campo_x( double x0, double y0, double X[], double Y[], double Q[], int N)
{
	int i;
	double xi,yi;
	long double r3;
 double Ex, Ey;
	Ex = 0.0 ;
	for(i=0; i<N ; i++)
	
	{
	xi = x0 - X[i]; // Es la distancia entre el punto inicial y la carga en x
	yi = y0 -Y[i];  // Es la distancia entre el punto unicial y la carga en y
	r3 = pow(xi*xi + yi*yi, -1.5); /* Es la parte del denominador de la formula del campo*/ 
	Ex = Ex + Q[i]*xi*r3;		
	}
	return Ex;
}

 double calculo_campo_y( double x0, double y0, double X[], double Y[], double Q[], int N)
{
	int i;
	double yi, xi;
	long double r3;
	 double Ex, Ey;
	Ey = 0.0;
	for(i=0; i<N ; i++)
	
	{
	xi = x0 - X[i];	
	yi = y0 -Y[i];  // Es la distancia entre el punto unicial y la carga en y
	r3 = pow(xi*xi + yi*yi, -1.5); /* Es la parte del denominador de la formula del campo*/ 
	Ey = Ey + Q[i]*yi*r3;		
	}
	return Ey;
}

//FUNCIONES DISTANCIA// 

double distanciaMaxima (double x0, double y0, double X[], double Y[], int N) {
        int i;
	double distancia,disMax = 0.0;
	
	for (i=0; i<N; i++){
		
		distancia=sqrt(pow((x0-X[i]),2) + pow((y0-Y[i]),2));
		
		//Medimos la distancia del punto inicial a cada carga y determinamos
		//la distancia máxima.
		
		if (distancia>disMax){
			disMax=distancia;
		}     
	}
	
	return disMax;
}

double distanciaMinima (double x0, double y0, double X[], double Y[], int N) {
        int i;
	double distancia, disMin = 1000;
	
	for (i=0; i<N; i++){
		
		distancia=sqrt(pow((x0-X[i]),2) + pow((y0-Y[i]),2));
		
		//Medimos la distancia del punto inicial a cada carga y determinamos
		//la distancia mínima.
		
		if (distancia<disMin){
			 disMin=distancia;
		}     
		
		return disMin;
}


